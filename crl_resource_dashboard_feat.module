<?php
/**
 * @file
 * Code for the CRL Resource Dashboard feature.
 */

include_once 'crl_resource_dashboard_feat.features.inc';



/**
 * Implements hook_theme().
 */
function crl_resource_dashboard_feat_theme() {
  $hooks = array(
    // Theme hook to generate a resoruce dashboard header.
    'crl_resource_dashboard_feat_view_head' => array(
      'variables' => array('count' => 0, 'path' => '', 'url' => '', 'title' => '', 'status' => '', 'tagline' => '', 'sort_text' => ''),
    ),
    // Theme hook to generate MAIN resoruce dashboard header.
    'crl_resource_dashboard_feat_view_head_all' => array(
      'variables' => array('count' => 0, 'path' => '', 'url' => '', 'title' => '', 'status' => '', 'tagline' => '', 'sort_text' => ''),
    ),
    // Theme hook for row values of the dashboard blocks. This will
    // automatically get used by views based on it's name and the standard
    // template suggestion rules.
    'views_view_fields__resource_dashboard' => array(
      'variables' => array(),
      'template' => 'views-view-fields--resource-dashboard',
    ),
  );
  foreach ($hooks as &$hook) {
    // Make sure that our actual theme hooks and/or preprocessor logic is
    // included for each entry.
    $hook['path'] = drupal_get_path('module', 'crl_resource_dashboard_feat') . '/themes';
    $hook['file'] = 'crl_resource_dashboard_feat.theme.inc';
  }
  return $hooks;
}


/**
 * Implements hook_views_pre_render().
 * 
 * Define attachment before/after values for dashboard blocks.
 */
function crl_resource_dashboard_feat_views_pre_render(&$view) {
  if ($view->name == 'resource_dashboard') {
    $set = FALSE;
    $count = $view->total_rows;
    $path = 'resources/main';
    switch ($view->current_display) {
      case 'block_1' :
        $set = TRUE;
        $status = 'crl_review_available';
        $url_options = array('query' => array('f[0]' => 'crl_resource_status_backref:' . $status));
        $title = t('CRL Reviews');
        $tagline = t('Resources Analyzed by CRL');
        $sort_text = t('by date of posting');
        $link_text = 'Browse All Reviews';
        $theme = 'crl_resource_dashboard_feat_view_head';
        break;
      case 'block_2' :
        $set = TRUE;
        $status = 'license_available';
        $url_options = array('query' => array('f[0]' => 'crl_resource_status_backref:' . $status));
        $title = t('Active Offers');
        $tagline = t('Resources with Active CRL Offers');
        $sort_text = t('by date of expiration');
        $link_text = 'Browse All Offers';
        $theme = 'crl_resource_dashboard_feat_view_head';
        break;
      case 'block_3' :
        $set = TRUE;
        $status = 'crl_desiderata';
        $url_options = array('query' => array('f[0]' => 'crl_resource_status_backref:' . $status));
        $title = t('CRL Pipeline');
        $tagline = t('Resources Under Consideration');
        $sort_text = t('by date of posting');
        $link_text = 'Browse All Pipeline Items';
        $theme = 'crl_resource_dashboard_feat_view_head';
        break;
      case 'block_4' :
        $set = TRUE;
        $status = '';
        $url_options = array();
        $title = t('Total Resources');
        $tagline = t('Browse and Search All (A-Z)');
        $sort_text = '';
        $link_text = t('Browse and Search All (A-Z)');
        $theme = 'crl_resource_dashboard_feat_view_head_all';
        break;
    }
    if ($set) {
      $view->attachment_before = theme($theme, array(
        'count' => $count,
        'status' => $status,
        'title' => $title,
        'tagline' => $tagline,
        'sort_text' => $sort_text,
        'path' => $path,
        'url' => url($path, $url_options),
      ));
      if ($view->current_display != 'block_4') {
        $view->attachment_after = l($link_text, $path, $url_options);
      }
    }

  }
}
